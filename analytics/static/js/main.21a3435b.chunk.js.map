{"version":3,"sources":["axios/Contact/contactAxios.js","Component/Contact/contact.js","Component/Header/header.js","axios/Facebook/facebookLogin.js","axios/Google/googleLogin.js","Component/Login/login.js","Component/Analytics/analytic.js","App.js","reportWebVitals.js","index.js"],"names":["secureAxios","axios","create","baseURL","Registration","useForm","register","handleSubmit","errors","formState","useState","first_name","last_name","email","message","UserRegsitration","setUserRegsitration","handleChange","e","target","name","value","onSubmit","data","a","post","then","res","console","log","localStorage","setItem","error","getItem","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","catch","className","type","required","minLength","maxLength","pattern","onChange","style","color","password","sitekey","id","transition","Zoom","limit","Contact","to","fbLogin","accesstoken","token","backend","grant_type","client_id","client_secret","gLogin","access_token","Login","responseFacebook","response","accessToken","responseGoogle","appId","fields","callback","clientId","buttonText","onSuccess","onFailure","Analytic","watch","start","end","statecontact","setStatecontact","fetchData","setFetchData","getDate","map","item","date","getCount","Count","labels","datasets","label","fill","backgroundColor","borderColor","options","title","display","text","scales","yAxes","ticks","min","max","stepSize","width","height","margin","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21a3435b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst secureAxios = axios.create({\r\n    baseURL: \"http://127.0.0.1:8000/\",\r\n})\r\n\r\n\r\nexport default secureAxios","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport secureAxios from '../../axios/Contact/contactAxios'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Zoom } from 'react-toastify';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Registration() {\r\n    const { register, handleSubmit,  formState: { errors } } = useForm();\r\n \r\n\r\n    const [UserRegsitration, setUserRegsitration] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        message:\"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setUserRegsitration({ ...UserRegsitration, [e.target.name]: e.target.value })\r\n\r\n    }\r\n\r\n    function onChange(value) {\r\n        console.log(\"Captcha value:\", value);\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        await secureAxios.post('contact/', UserRegsitration)\r\n            .then(res => {\r\n\r\n                    console.log(res.data)\r\n                localStorage.setItem('error', res.data.error)\r\n                if (res.data.error === localStorage.getItem('error')) {\r\n                    toast.error(localStorage.getItem('error'), {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    toast.success('We Will Contact You', {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n\r\n\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.data)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <label>First Name</label>\r\n\r\n                                <input className=\"form-control\" type='text' name='first_name' {...register(\"first_name\", { required: true, minLength: 3, maxLength: 50, pattern: /^[a-z][a-z\\s]*$/i })} onChange={handleChange} />\r\n\r\n\r\n                                {errors.first_name && <span style={{ color: 'red' }}>This field is required</span>}\r\n                                <br />\r\n\r\n                                <label>Full Name</label>\r\n\r\n                                    <input className=\"form-control\" type='text' name='last_name' {...register(\"last_name\", { required: true, minLength: 3, maxLength: 50, pattern: /^[a-z][a-z\\s]*$/i })} onChange={handleChange} />\r\n\r\n\r\n                                    {errors.last_name && <span style={{ color: 'red' }}>This field is required</span>}\r\n                                <br />\r\n\r\n                                <label>Email</label>\r\n\r\n                                <input className=\"form-control\" type='email' name='email' {...register(\"email\", { required: true, pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i })} onChange={handleChange} />\r\n\r\n\r\n                                {errors.password && <span style={{ color: 'red' }}>Email Should is a@domain.com</span>}\r\n                                <br />\r\n\r\n                                <label>Message</label>\r\n\r\n                                    <textarea  className=\"form-control\" type='textarea' name='message' {...register(\"message\", { required: true, minLength: 3, maxLength: 250, pattern: /^[a-z][a-z\\s]*$/i })} onChange={handleChange} />\r\n\r\n\r\n                                    {errors.message && <span style={{ color: 'red' }}>This field is required</span>}\r\n                                    <br />\r\n                                <ReCAPTCHA\r\n                                    sitekey=\"6LdohMIaAAAAABXaYYLvBGwlheXUMF8KnAkN3jP5\"\r\n                                    onChange={onChange}\r\n                                />\r\n                                <br />\r\n                                <div >\r\n                                    <button className=\"form-control\" id='btn' type='submit' >Register</button>\r\n                                </div>\r\n                            </form>\r\n\r\n                        \r\n\r\n            <ToastContainer\r\n                transition={Zoom}\r\n                limit='1'\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Contact () {\r\n    return(\r\n        <>\r\n           <nav className=\"navbar navbar-light bg-light\">\r\n                <span className=\"navbar-brand mb-0 h1\"><Link  to='/login'>LOGO</Link></span>\r\n\r\n               <div className=\"form-inline my-2 my-lg-0\">\r\n                   <button className=\"btn btn-outline-success my-2 my-sm-0\"><Link to='/login'>Login</Link></button>&nbsp;&nbsp;&nbsp;\r\n                   <button className=\"btn btn-outline-success my-2 my-sm-0\"><Link  to='/contact'>Contact</Link></button>&nbsp;&nbsp;&nbsp;\r\n                   <button className=\"btn btn-outline-success my-2 my-sm-0\"><Link to='/analytics'> Anaytics</Link></button>\r\n\r\n               </div>\r\n           </nav>\r\n        </>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\n\r\nconst fbLogin = (accesstoken) =>{\r\n    console.log(accesstoken);\r\n    axios.post('http://127.0.0.1:8000/auth/convert-token/',{\r\n         token: accesstoken,\r\n        backend: 'facebook',\r\n        grant_type: 'convert_token',\r\n        client_id: 'nXy8fwSny65o4BMU0CkwVOuZgKtikihREUwLCUYA',\r\n        client_secret: 'aN48sugGZfXGC0SWG6NJssemfQpYqW6V3FAkBFXioZWf86TjtRThHCyr5S5MLYzg3p7f0PCQCzdcZSxa6Y4wGJk5xO1V9XVesTJra2nzwAXU5I790tfaPhiCUq3WBQbz',\r\n    })\r\n        .then((res) =>{\r\n            // localStorage.setItem('access_token', res.data.access_token)\r\n            // localStorage.setItem('refresh_token',res.data.refresh_token)\r\n            console.log(res.data, 'Response From Backend Facebook')\r\n        })\r\n\r\n}\r\n\r\n\r\nexport default fbLogin;","import axios from \"axios\";\r\n\r\n\r\nconst gLogin = (accesstoken) =>{\r\n    console.log(accesstoken);\r\n    axios.post('http://127.0.0.1:8000/auth/convert-token/',{\r\n        token: accesstoken,\r\n        backend: 'google-oauth2',\r\n        grant_type: 'convert_token',\r\n        client_id: 'nXy8fwSny65o4BMU0CkwVOuZgKtikihREUwLCUYA',\r\n        client_secret: 'aN48sugGZfXGC0SWG6NJssemfQpYqW6V3FAkBFXioZWf86TjtRThHCyr5S5MLYzg3p7f0PCQCzdcZSxa6Y4wGJk5xO1V9XVesTJra2nzwAXU5I790tfaPhiCUq3WBQbz',\r\n    })\r\n        .then((res) =>{\r\n            localStorage.setItem('access_token', res.data.access_token)\r\n\r\n            console.log(res.data, 'Response From Backend')\r\n        })\r\n\r\n}\r\n\r\n\r\nexport default gLogin;","import React from \"react\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport fbLogin from \"../../axios/Facebook/facebookLogin\";\r\nimport gLogin from \"../../axios/Google/googleLogin\";\r\n\r\nexport default function Login() {\r\n\r\n\r\n    const responseFacebook = async  (response) => {\r\n\r\n        fbLogin(response.accessToken)\r\n        console.log(response);\r\n    }\r\n\r\n    const responseGoogle = async (response) => {\r\n        gLogin(response.accessToken)\r\n        console.log(response);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <FacebookLogin\r\n                appId=\"294715465446463\"\r\n                fields=\"name,email,picture\"\r\n                callback={responseFacebook}\r\n            />\r\n            <br/>\r\n            <br/>\r\n            <GoogleLogin\r\n                clientId=\"757625228085-t51dvs052r5ke2nevsf74c1u4bu1355l.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n\r\n            />,\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport LineChart from \"./LineChart\";\r\nimport secureAxios from \"../../axios/Contact/contactAxios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\n\r\nexport default function Analytic (){\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const [statecontact, setStatecontact] = useState({\r\n        start : '',\r\n        end: '',\r\n    });\r\n    const [fetchData,setFetchData] = useState([])\r\n\r\n    const getDate = fetchData.map((item)=>{\r\n        return item.date\r\n    })\r\n\r\n    const getCount = fetchData.map((item)=>{\r\n        return item.Count\r\n    })\r\n\r\n\r\n    // const getDate = fetchData.map((item)=>{\r\n    //     return item.date\r\n    // })\r\n    //\r\n    // const getCount = fetchData.map((item)=>{\r\n    //     return item.Count\r\n    // })\r\n\r\n    const handleChange = (e) =>{\r\n\r\n        setStatecontact({ ...statecontact, [e.target.name]: e.target.value })\r\n\r\n    }\r\n\r\n\r\n    const onSubmit = async (data)=>{\r\n        console.log(data)\r\n\r\n        await secureAxios.post('all_date/',data)\r\n            .then(res =>{\r\n                setFetchData(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch(error =>{\r\n                console.log(error.data)\r\n            })\r\n    }\r\n\r\n    const data = {\r\n        labels:getDate,\r\n        datasets:[{\r\n            label:'number of contact us details (C)',\r\n            data:getCount,\r\n            fill: false,\r\n            backgroundColor: \"rgb(0, 74, 94)\",\r\n            borderColor: \"rgba(\t0, 135, 170, 0.2)\",\r\n        }]\r\n    }\r\n    const options = {\r\n        title:{\r\n            display:true,\r\n            text:'Line Chart'\r\n        },\r\n        scales:{\r\n            yAxes:[{\r\n                ticks:{\r\n                    min:0,\r\n                    max:6,\r\n                    stepSize:1\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    const LineChart = () => (\r\n        <>\r\n            <div className='header'>\r\n                <h1 className='title'>Line Chart</h1>\r\n                <div className='links'>\r\n                    <a\r\n                        className='btn btn-gh'\r\n                        href='https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js'\r\n                    >\r\n                        Github Source\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    );\r\n\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {/* register your input into the hook by invoking the \"register\" function */}\r\n                <input type='date' name='start' {...register(\"start\", { required: true })} onChange={handleChange} />\r\n                {/* errors will return when field validation fails  */}\r\n                {errors.start && <span>This field is required</span>}\r\n\r\n                {/* include validation with required or other standard HTML validation rules */}\r\n                <input type='date' name='end' {...register(\"end\", { required: true })} onChange={handleChange} />\r\n                {/* errors will return when field validation fails  */}\r\n                {errors.end && <span>This field is required</span>}\r\n\r\n                <input type=\"submit\" />\r\n            </form>\r\n\r\n            <div style={{width:\"70%\",height:\"70%\",margin:\"70px\"}}>\r\n                <Line data={data} options={options} />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import Contact from \"./Component/Contact/contact\";\nimport Header from \"./Component/Header/header\"\nimport Login from \"./Component/Login/login\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Analytic from \"./Component/Analytics/analytic\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n          <BrowserRouter>\n              <Header/>\n              <switch>\n\n\n                <Route path='/contact' component={Contact}/>\n                  <Route path='/analytics' component= {Analytic}/>\n                  <Route path='/login' component={Login}/>\n                  {/*<Route path='/' component={Login}/>*/}\n\n              </switch>\n          </BrowserRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}